COMMENT ##.*
AND and
OR or
VAR var
DOES does
BEGIN begin
END end
IF if
ELSE else
FOR for
WHILE while
RETURN return
FUNCTION function
INPUT input
OUTPUT output
CONST const
TRUE true
FALSE false
VOID void
ASSIGNOP \=
NOT not 
SC \;
LP \(
RP \)
EQ \=\=
GT \>
GTE \>\=
LT \<
LTE \<\=
NE \!\=
PLUS \+
MINUS \-
DIVISION \\
MULT \*
COMMA \,
LETTER [a-zA-Z]
DIGIT [0-9]
SIGN [+-]
INT {SIGN}?{DIGIT}+
DOUBLE {SIGN}?{DIGIT}*(\.){DIGIT}+
STRING \".*\"
CHAR \'.\'
READINC readInc
READALT readAlt
READTEMP readTemp
READACC readAcc
READTIME readTime
TOGGLECAM toggleCam
TAKEPIC takePic 
CONNECTWIFI connectWifi
TAKEOF takeOf
LAND land 
CHANGEALT changeAlt
ROTATE rotate
GOFORWARD goForward
GOBACKWARD goBackward
IDENTIFIER {LETTER}({LETTER}|\_|{DIGIT})*
%%
"\n" {
       extern int lineno;
       lineno++;
}
{COMMENT} return(COMMENT);
{AND} return(AND);
{OR} return(OR);
{VAR} return(VAR);
{DOES} return(DOES);
{BEGIN} return(BEGINE);
{END} return(END);
{NOT} return(NOT);
{IF} return(IF);
{ELSE} return(ELSE);
{FOR} return(FOR);
{WHILE} return(WHILE);
{RETURN} return(RETURN);
{FUNCTION} return(FUNCTION);
{INPUT} return(INPUT);
{OUTPUT} return(OUTPUT);
{CONST} return(CONST);
{TRUE} return(TRUE);
{FALSE} return(FALSE);
{VOID} return(VOID);
{ASSIGNOP} return(ASSIGN_OP);
{SC} return(SC);
{LP} return(LP);
{RP} return(RP);
{EQ} return(EQ);
{GT} return(GT);
{GTE} return(GTE);
{LT} return(LT);
{LTE} return(LTE);
{NE} return(NE);
{PLUS} return(PLUS);
{MINUS} return(MINUS);
{DIVISION} return(DIV); 
{MULT} return(MULT);
{COMMA} return(COMMA);
{INT}  return(INT);
{DOUBLE}  return(DOUBLE);
{STRING}  return(STRING);
{CHAR}  return(CHAR);
{READINC} return(READINC);
{READALT} return(READALT);
{READTEMP} return(READTEMP);
{READACC} return(READACC);
{READTIME} return(READTIME);
{TOGGLECAM} return(TOGGLECAM);
{TAKEPIC} return(TAKEPIC);
{CONNECTWIFI} return(CONNECTWIFI);
{TAKEOF} return(TAKEOF);
{LAND} return(LAND);
{CHANGEALT} return(CHANGEALT);
{ROTATE} return(ROTATE);
{GOFORWARD} return(GOFORWARD);
{GOBACKWARD} return(GOBACKWARD);
{IDENTIFIER}  return(IDENTIFIER);
[ \t]* ;
%%
int yywrap(){
   return 1; 
}


